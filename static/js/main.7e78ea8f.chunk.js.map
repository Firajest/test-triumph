{"version":3,"sources":["redux/actionTypes.js","components/form/index.js","redux/actionCreators.js","components/editForm/index.js","components/colorList/index.js","App.js","redux/reducers/mainReducer.js","localstorage/localStorageMethods.js","index.js"],"names":["ADD_ENTRY","START_EDIT_ENTRY","END_EDIT_ENTRY","DELETE_ENTRY","AddEntryForm","dispatch","useDispatch","useState","name","setName","type","setType","color","setColor","handleSubmit","event","entry","preventDefault","id","Math","random","payload","onChange","colors","className","onSubmit","htmlFor","required","placeholder","value","target","EditForm","currentEntry","useSelector","state","data","ColorList","isOpen","allEntries","handleEdit","handleDelete","useEffect","setList","list","draggedFrom","draggedTo","isDragging","originalOrder","updatedOrder","dragAndDrop","setDragAndDrop","onDragStart","initialPosition","Number","currentTarget","dataset","position","dataTransfer","setData","onDragOver","newList","itemDragged","remainingItems","filter","item","index","slice","onDrop","onDragLeave","length","map","el","data-position","draggable","data-label","style","backgroundColor","onClick","ariaHideApp","overlay","top","left","right","bottom","content","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","App","initialState","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","combineReducers","action","addData","push","deleteData","editedData","composeWithDevTools","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e78ea8f.chunk.js","sourcesContent":["export const ADD_ENTRY = 'ADD_ENTRY'\r\nexport const START_EDIT_ENTRY = 'START_EDIT_ENTRY'\r\nexport const END_EDIT_ENTRY = 'END_EDIT_ENTRY'\r\nexport const DELETE_ENTRY = 'DELETE_ENTRY'","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addEntry } from '../../redux/actionCreators'\r\nimport ColorPicker from 'rc-color-picker';\r\nimport 'rc-color-picker/assets/index.css';\r\n\r\nfunction AddEntryForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('')\r\n  const [type, setType] = useState('')\r\n  const [color, setColor] = useState('')\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    dispatch(addEntry({ name, type, color, id: Math.random() }))\r\n    setName('');\r\n    setType('');\r\n    setColor('');\r\n  }\r\n\r\n  function changeHandler(colors) {\r\n    setColor(colors.color);\r\n  }\r\n  // const colorPattern = /^(#[\\da-f]{3}|#[\\da-f]{6}|rgba\\(((\\d{1,2}|1\\d\\d|2([0-4]\\d|5[0-5]))\\s*,\\s*){2}((\\d{1,2}|1\\d\\d|2([0-4]\\d|5[0-5]))\\s*)(,\\s*(0\\.\\d+|1))\\)|rgb\\(((\\d{1,2}|1\\d\\d|2([0-4]\\d|5[0-5]))\\s*,\\s*){2}((\\d{1,2}|1\\d\\d|2([0-4]\\d|5[0-5]))\\s*))$/s\r\n  return (\r\n    <>\r\n      <ColorPicker\r\n        color={'#8ecfff'}\r\n        onChange={changeHandler}\r\n      >\r\n        <span className=\"react-custom-trigger\">color template - click me!!</span>\r\n      </ColorPicker>\r\n      <form onSubmit={(event) => handleSubmit(event)}>\r\n        <div className='rowWrapper'>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input required name=\"name\" placeholder=\"Name\" value={name} onChange={(event) => setName(event.target.value)} />\r\n        </div>\r\n        <div className='rowWrapper'>\r\n          <label htmlFor=\"type\">Type</label>\r\n          <input required name=\"type\" placeholder=\"Type\" value={type} onChange={(event) => setType(event.target.value)} />\r\n        </div>\r\n        <div className='rowWrapper'>\r\n          <label htmlFor=\"color\">Color</label>\r\n          <input\r\n            // pattern={colorPattern}\r\n            required\r\n            name=\"color\"\r\n            placeholder=\"Color\"\r\n            value={color}\r\n            onChange={(event) => setColor(event.target.value)\r\n            } />\r\n        </div>\r\n        <div className='rowWrapper'>\r\n          <button type=\"submit\" className='addButton'>Add entry</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddEntryForm;","import {\r\n  ADD_ENTRY, START_EDIT_ENTRY,END_EDIT_ENTRY, DELETE_ENTRY\r\n} from './actionTypes';\r\n\r\nexport const addEntry = (entry) => ({ type: ADD_ENTRY, payload: entry });\r\nexport const deleteEntry = (entry) => ({ type: DELETE_ENTRY, payload: entry });\r\nexport const startEditEntry = (entry) => ({ type: START_EDIT_ENTRY, payload: entry });\r\nexport const endEditEntry = (entry) => ({ type: END_EDIT_ENTRY, payload: entry });\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { endEditEntry } from '../../redux/actionCreators';\r\nimport ColorPicker from 'rc-color-picker';\r\nimport 'rc-color-picker/assets/index.css';\r\nimport './style.css'\r\n\r\nfunction EditForm() {\r\n  const dispatch = useDispatch();\r\n  const currentEntry = useSelector((state) => state.data.currentEntry);\r\n\r\n  const [name, setName] = useState(currentEntry.name);\r\n  const [type, setType] = useState(currentEntry.type);\r\n  const [color, setColor] = useState(currentEntry.color);\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    dispatch(endEditEntry({ name, type, color }));\r\n  }\r\n\r\n  function changeHandler(colors) {\r\n    setColor(colors.color);\r\n  }\r\n  return (\r\n    <div className='wrapper'>\r\n      <ColorPicker\r\n        color={'#8ecfff'}\r\n        onChange={changeHandler}\r\n      >\r\n        <span className=\"react-custom-trigger\">color template - click me!!</span>\r\n      </ColorPicker>\r\n        <form onSubmit={(event) => handleSubmit(event)}>\r\n          <div className='rowWrapper'>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input required name=\"name\" placeholder=\"Name\" value={name} onChange={(event) => setName(event.target.value)} />\r\n          </div>\r\n          <div className='rowWrapper'>\r\n            <label htmlFor=\"type\">Type </label>\r\n            <input required name=\"type\" placeholder=\"Type\" value={type} onChange={(event) => setType(event.target.value)} />\r\n          </div>\r\n          <div className='rowWrapper'>\r\n            <label htmlFor=\"color\">Color </label>\r\n            <input required name=\"color\" placeholder=\"Color\" value={color} onChange={(event) => setColor(event.target.value)} />\r\n          </div>\r\n          <div className='rowWrapper'>\r\n            <button type=\"submit\" className='editButton'>Edit entry and close form</button>\r\n          </div>\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditForm;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteEntry, startEditEntry } from '../../redux/actionCreators'\r\nimport ReactModal from 'react-modal'\r\nimport EditForm from '../editForm'\r\nimport 'rc-color-picker/assets/index.css';\r\nimport './style.css';\r\n\r\nfunction ColorList() {\r\n  const isOpen = useSelector((state) => state.data.isOpen)\r\n  const dispatch = useDispatch();\r\n  const allEntries = useSelector((state) => state.data.allEntries);\r\n\r\n\r\n  function handleEdit(event, id, name, type, color) {\r\n    event.preventDefault();\r\n    dispatch(startEditEntry({ id, name, type, color }))\r\n  }\r\n\r\n  function handleDelete(event, id) {\r\n    event.preventDefault();\r\n    dispatch(deleteEntry({ id }))\r\n  }\r\n\r\n  //---------------------------------------------------------DnD part\r\n  useEffect(() => { //костыль для работы с useSelector\r\n    setList(allEntries)\r\n  }, [allEntries])\r\n  const [list, setList] = useState(allEntries);\r\n  const [dragAndDrop, setDragAndDrop] = useState({\r\n    draggedFrom: null,\r\n    draggedTo: null,\r\n    isDragging: false,\r\n    originalOrder: [],\r\n    updatedOrder: []\r\n  });\r\n\r\n  // onDragStart fires when an element\r\n  // starts being dragged\r\n  const onDragStart = (event) => {\r\n    const initialPosition = Number(event.currentTarget.dataset.position);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: initialPosition,\r\n      isDragging: true,\r\n      originalOrder: list\r\n    });\r\n\r\n    // Note: this is only for Firefox.\r\n    // Without it, the DnD won't work.\r\n    // But we are not using it.\r\n    event.dataTransfer.setData(\"text/html\", '');\r\n  }\r\n\r\n  // onDragOver fires when an element being dragged\r\n  // enters a droppable area.\r\n  // In this case, any of the items on the list\r\n  function onDragOver(event) {\r\n\r\n    // in order for the onDrop\r\n    // event to fire, we have\r\n    // to cancel out this one\r\n    event.preventDefault();\r\n\r\n    let newList = dragAndDrop.originalOrder;\r\n\r\n    // index of the item being dragged\r\n    const draggedFrom = dragAndDrop.draggedFrom;\r\n\r\n    // index of the droppable area being hovered\r\n    const draggedTo = Number(event.currentTarget.dataset.position);\r\n\r\n    const itemDragged = newList[draggedFrom];\r\n    const remainingItems = newList.filter((item, index) => index !== draggedFrom);\r\n\r\n    newList = [\r\n      ...remainingItems.slice(0, draggedTo),\r\n      itemDragged,\r\n      ...remainingItems.slice(draggedTo)\r\n    ];\r\n\r\n    if (draggedTo !== dragAndDrop.draggedTo) {\r\n      setDragAndDrop({\r\n        ...dragAndDrop,\r\n        updatedOrder: newList,\r\n        draggedTo: draggedTo\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  function onDrop(event) {\r\n\r\n    setList(dragAndDrop.updatedOrder);\r\n\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedFrom: null,\r\n      draggedTo: null,\r\n      isDragging: false\r\n    });\r\n  }\r\n\r\n\r\n  function onDragLeave() {\r\n    setDragAndDrop({\r\n      ...dragAndDrop,\r\n      draggedTo: null\r\n    });\r\n\r\n  }\r\n  //---------------------------------------------------------DnD part\r\n\r\n  return (\r\n    <>\r\n      <div className='table-wrap'>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Color</th>\r\n              <th>Color Template</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            {allEntries.length ? list.map((el, index) => {\r\n              return (\r\n                <tr\r\n                  className='cell'\r\n                  key={index}\r\n                  data-position={index}\r\n                  draggable='true'\r\n                  onDragStart={onDragStart}\r\n                  onDragOver={onDragOver}\r\n                  onDrop={onDrop}\r\n                  onDragLeave={onDragLeave}\r\n                >\r\n                  <td className='name'  data-label='name'>{el.name}</td>\r\n                  <td className='type'  data-label='type'>{el.type}</td>\r\n                  <td className='color' data-label='color'>{el.color}</td>\r\n                  <td className='colorTemplate' style={{ backgroundColor: `${el.color}` }}  data-label='colorTemplate'></td>\r\n                  <td className='options' data-label='options'>\r\n                    <div className='btnWrapper'>\r\n                      <button className='editBtn btn' onClick={(event) => handleEdit(event, el.id, el.name, el.type, el.color)}>Edit</button>\r\n                      <button className='deleteBtn btn' onClick={(event) => handleDelete(event, el.id)}>Delete</button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            }) : <></>}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <ReactModal\r\n        isOpen={isOpen}\r\n        ariaHideApp={false}\r\n        // contentLabel=\"Inline Styles Modal Example\"\r\n        style={{\r\n          overlay: {\r\n            position: 'fixed',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(255, 255, 255, 0.75)',\r\n          },\r\n          content: {\r\n            position: 'absolute',\r\n            top: '40px',\r\n            left: '40px',\r\n            right: '40px',\r\n            bottom: '40px',\r\n            border: '1px solid #ccc',\r\n            background: '#fff',\r\n            overflow: 'auto',\r\n            WebkitOverflowScrolling: 'touch',\r\n            borderRadius: '4px',\r\n            outline: 'none',\r\n            padding: '20px',\r\n          },\r\n        }}\r\n      >\r\n        <EditForm />\r\n      </ReactModal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ColorList;\r\n","import Form from './components/form'\nimport ColorList from './components/colorList'\nimport './app.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n      <ColorList />\n    </div >\n  );\n}\n\nexport default App;\n","import {\r\n  ADD_ENTRY, START_EDIT_ENTRY, END_EDIT_ENTRY, DELETE_ENTRY\r\n} from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  allEntries: [],\r\n  isOpen: false,\r\n  currentEntry: {},\r\n};\r\n\r\nexport default function mainReducer(state = initialState, action) {\r\n  const { type, payload } = action\r\n  switch (type) {\r\n    case ADD_ENTRY:\r\n      let addData = [...state.allEntries];\r\n      addData.push(payload)\r\n      return {\r\n        ...state,\r\n        allEntries: addData,\r\n      }\r\n    case DELETE_ENTRY:\r\n      const deleteData = [...state.allEntries].filter((el) => el.id !== payload.id)\r\n      return {\r\n        ...state,\r\n        allEntries: deleteData,\r\n      }\r\n    case START_EDIT_ENTRY:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        currentEntry: payload\r\n      }\r\n    case END_EDIT_ENTRY:\r\n      const editedData = [...state.allEntries].map((el) => {\r\n        if (el.id === state.currentEntry.id) {\r\n          el.name = payload.name;\r\n          el.type = payload.type;\r\n          el.color = payload.color;\r\n        }\r\n        return el\r\n      })\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n        allEntries: editedData,\r\n        currentEntry: {}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n};","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {}\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport mainReducer from './redux/reducers/mainReducer';\nimport { loadState, saveState } from './localstorage/localStorageMethods';\n\nconst persistedState = loadState();\n\nconst store = createStore(\n  combineReducers({\n    data: mainReducer,\n  }),\n  persistedState,\n  composeWithDevTools(),\n)\nstore.subscribe(() => {\n  saveState({\n    data: store.getState().data,\n  });\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);"],"sourceRoot":""}